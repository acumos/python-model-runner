{
  "comments": [
    {
      "key": {
        "uuid": "a9f793be_13eb6469",
        "filename": "acumos_model_runner/runner.py",
        "patchSetId": 3
      },
      "lineNbr": 123,
      "author": {
        "id": 10
      },
      "writtenOn": "2018-08-08T20:43:37Z",
      "side": 0,
      "message": "Believe a wait period (make sure all models loaded) was necessary for some bigger loads (e.g. image classifier).  It blocks subsequent action until all processes are spun up.  Unless this is nested somewhere, it\u0027s a loss of functionality.",
      "revId": "701ca73e33bd887f0211e1b003fcd39d6688d4bc",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ec98815_27e707f4",
        "filename": "acumos_model_runner/runner.py",
        "patchSetId": 3
      },
      "lineNbr": 123,
      "author": {
        "id": 16
      },
      "writtenOn": "2018-08-08T21:41:31Z",
      "side": 0,
      "message": "I\u0027m not sure that I follow here. If a single worker is ready to proceed, why would we artificially delay loading the server?",
      "parentUuid": "a9f793be_13eb6469",
      "revId": "701ca73e33bd887f0211e1b003fcd39d6688d4bc",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "315f372f_ffe0b509",
        "filename": "acumos_model_runner/runner.py",
        "patchSetId": 3
      },
      "lineNbr": 123,
      "author": {
        "id": 10
      },
      "writtenOn": "2018-08-09T15:32:23Z",
      "side": 0,
      "message": "Sorry, I mis-remembered the intention of this code.  It was to be able to use the server programatically (see above) instead of just via command-line.  It initially related to proper shutdown and check of failed start-up timing in a unit test. You can ack this comment as long as unit tests with actual flask server are accomplished.  Using actual flask server was sanity check against changes that may cause it to hang or endlessly loop if timeout value was too short (e.g. for big model loads).",
      "parentUuid": "2ec98815_27e707f4",
      "revId": "701ca73e33bd887f0211e1b003fcd39d6688d4bc",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4d1e2ee_5ced40b7",
        "filename": "acumos_model_runner/runner.py",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 10
      },
      "writtenOn": "2018-08-08T20:43:37Z",
      "side": 0,
      "message": "Not sure forwarding loss is acceptable.  Has it been moved elsewhere?",
      "revId": "701ca73e33bd887f0211e1b003fcd39d6688d4bc",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6187d8f8_a1803815",
        "filename": "acumos_model_runner/runner.py",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 16
      },
      "writtenOn": "2018-08-08T21:41:31Z",
      "side": 0,
      "message": "I removed forwarding because it was an overly-complex feature that seemed to be trying to compensate for a lack of Acumos runtime. IMO the same functionality can be achieved more generally in a sidecar microservice that interacts with a broker or another downstream node on behalf of the model runner. The added benefit is that a single forwarder implementation can be reused for any model runner implementation that conforms to the (simpler) API. This was discussed in the new model runner API proposal doc.",
      "parentUuid": "e4d1e2ee_5ced40b7",
      "revId": "701ca73e33bd887f0211e1b003fcd39d6688d4bc",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e73ab45f_c2972537",
        "filename": "acumos_model_runner/runner.py",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 10
      },
      "writtenOn": "2018-08-09T15:32:23Z",
      "side": 0,
      "message": "Side car may be acceptable, but we need some intermediate solution.  As per above, if multiple runners could be instantiated in code (e.g. dev writes module that instantiates multiple runners, each with a model of choice), that may be acceptable but it places burden on developers to create such a model.   I assume this is also the exact implementation proposed for a side car.\n\nre: proposal\nDocumented in API but may be hard to execute if not parallel.  By killing this functionality and not having implemented side car there will be a vacuum for forward testing.  Additionally, don\u0027t other runners allow trivially forwarding still?",
      "parentUuid": "6187d8f8_a1803815",
      "revId": "701ca73e33bd887f0211e1b003fcd39d6688d4bc",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2eae965e_376ef531",
        "filename": "acumos_model_runner/runner.py",
        "patchSetId": 3
      },
      "lineNbr": 199,
      "author": {
        "id": 10
      },
      "writtenOn": "2018-08-08T20:43:37Z",
      "side": 0,
      "message": "It was nice to have \u0027main\u0027 for local testing.",
      "revId": "701ca73e33bd887f0211e1b003fcd39d6688d4bc",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5906dc6d_b55b4549",
        "filename": "acumos_model_runner/runner.py",
        "patchSetId": 3
      },
      "lineNbr": 199,
      "author": {
        "id": 16
      },
      "writtenOn": "2018-08-08T21:41:31Z",
      "side": 0,
      "message": "Lol perhaps, but this is a module in a library that\u0027s not intended to be executed directly, so it got axed. You can still import the desired object in a unit test and execute that.",
      "parentUuid": "2eae965e_376ef531",
      "revId": "701ca73e33bd887f0211e1b003fcd39d6688d4bc",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2f7b4e9_a760938f",
        "filename": "acumos_model_runner/runner.py",
        "patchSetId": 3
      },
      "lineNbr": 199,
      "author": {
        "id": 10
      },
      "writtenOn": "2018-08-09T15:32:23Z",
      "side": 0,
      "message": "Sorry, for specificity demand, but what is the import, the \u0027ModelRunner\u0027 test class?",
      "parentUuid": "5906dc6d_b55b4549",
      "revId": "701ca73e33bd887f0211e1b003fcd39d6688d4bc",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    }
  ]
}