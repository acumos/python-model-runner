{
  "comments": [
    {
      "key": {
        "uuid": "a15ca978_b699715d",
        "filename": "acumos_model_runner/_version.py",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-01-23T16:56:28Z",
      "side": 1,
      "message": "pls update here too",
      "range": {
        "startLine": 5,
        "startChar": 21,
        "endLine": 5,
        "endChar": 25
      },
      "revId": "a9aadd15d1652ae934ec8209478494657789b3a9",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cf8eaba_35af41a3",
        "filename": "acumos_model_runner/oas_gen.py",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-01-23T16:56:28Z",
      "side": 1,
      "message": "here too",
      "range": {
        "startLine": 5,
        "startChar": 21,
        "endLine": 5,
        "endChar": 25
      },
      "revId": "a9aadd15d1652ae934ec8209478494657789b3a9",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1da2eaa3_a289e38d",
        "filename": "acumos_model_runner/oas_gen.py",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 290
      },
      "writtenOn": "2020-01-23T20:57:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1cf8eaba_35af41a3",
      "range": {
        "startLine": 5,
        "startChar": 21,
        "endLine": 5,
        "endChar": 25
      },
      "revId": "a9aadd15d1652ae934ec8209478494657789b3a9",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "638118cb_7770397c",
        "filename": "acumos_model_runner/oas_gen.py",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 16
      },
      "writtenOn": "2020-01-23T16:52:29Z",
      "side": 1,
      "message": "I personally wouldn\u0027t add a new dependency to the package just for parsing the version. You can just convert the string to a tuple, and use tuple comparisons, e.g.:\n\nversion \u003d tuple(map(int, \"0.6.0\".split(\u0027.\u0027)))\nassert version \u003c\u003d (0, 6, 0), \u0027Schema not supported\u0027",
      "revId": "a9aadd15d1652ae934ec8209478494657789b3a9",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7174ac87_50a5e05b",
        "filename": "acumos_model_runner/oas_gen.py",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 290
      },
      "writtenOn": "2020-01-23T17:03:41Z",
      "side": 1,
      "message": "I agree there prob was better way then introducing library.. I can look at tuple instead if we don\u0027t want to support earlier versions of schema.. otherwise will have to duplicate some of the comparison logic that semver already has if we want to support multiple schema versions.\n\nThe code example shows that schema \u003c 0.6.0 is not supported but that means older models will not run with this version of model runner... do we want to support multiple model schemas or just drop versions.. I had implemented this as compatible with older versions since I know we use a lot of models using previous session dumps.",
      "parentUuid": "638118cb_7770397c",
      "revId": "a9aadd15d1652ae934ec8209478494657789b3a9",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8989c2f_de96a85f",
        "filename": "acumos_model_runner/oas_gen.py",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 16
      },
      "writtenOn": "2020-01-23T19:26:51Z",
      "side": 1,
      "message": "I think we\u0027ll need to support multiple versions in order to make usage of the model runner for end-users more sane. \n\nPerhaps we can have a standard representation of API information, which we then convert to Swagger/OAS. This way, we\u0027ll have a function per version which maps metadata --\u003e OAS info, which finally gets mapped to YAML.\n\nRegarding the version, we\u0027ll basically keep what you have, e.g.:\n\n\n```\nversion_str \u003d \u00270.6.0\u0027  # get this from schema\nversion \u003d tuple(map(int, version_str.split(\u0027.\u0027)))\nmajor_minor \u003d version[:2]\n\nif major_minor \u003e (0, 6):\n    raise Exception(\u0027Latest supported schema is 0.6.*\u0027)\nelif major_minor \u003d\u003d (0, 6):\n    do_new_way()\nelse:\n    do_old_way()\n```\n\nWe should really be bumping the major version on breaking schema changes, but this is what we\u0027re working with.",
      "parentUuid": "7174ac87_50a5e05b",
      "revId": "a9aadd15d1652ae934ec8209478494657789b3a9",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60a716bc_fefe1b28",
        "filename": "acumos_model_runner/oas_gen.py",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 290
      },
      "writtenOn": "2020-01-23T20:57:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f8989c2f_de96a85f",
      "revId": "a9aadd15d1652ae934ec8209478494657789b3a9",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b9321ec_b7ef2197",
        "filename": "acumos_model_runner/oas_gen.py",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-01-23T16:56:28Z",
      "side": 1,
      "message": "what version is this? does it have to be hardcoded here?",
      "range": {
        "startLine": 41,
        "startChar": 39,
        "endLine": 41,
        "endChar": 46
      },
      "revId": "a9aadd15d1652ae934ec8209478494657789b3a9",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cdcb289_38671448",
        "filename": "acumos_model_runner/oas_gen.py",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 290
      },
      "writtenOn": "2020-01-23T20:57:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b9321ec_b7ef2197",
      "range": {
        "startLine": 41,
        "startChar": 39,
        "endLine": 41,
        "endChar": 46
      },
      "revId": "a9aadd15d1652ae934ec8209478494657789b3a9",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51c12652_b5d24383",
        "filename": "docs/release-notes.rst",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-01-23T16:56:28Z",
      "side": 1,
      "message": "date",
      "range": {
        "startLine": 4,
        "startChar": 22,
        "endLine": 4,
        "endChar": 26
      },
      "revId": "a9aadd15d1652ae934ec8209478494657789b3a9",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b27c2ab0_5b0114ef",
        "filename": "docs/release-notes.rst",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 290
      },
      "writtenOn": "2020-01-23T20:57:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51c12652_b5d24383",
      "range": {
        "startLine": 4,
        "startChar": 22,
        "endLine": 4,
        "endChar": 26
      },
      "revId": "a9aadd15d1652ae934ec8209478494657789b3a9",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be28c3f5_e2ad98d6",
        "filename": "docs/release-notes.rst",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 4
      },
      "writtenOn": "2020-01-23T16:56:28Z",
      "side": 1,
      "message": "please start including the date of the release",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 1
      },
      "revId": "a9aadd15d1652ae934ec8209478494657789b3a9",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e461ca7e_32ff93ce",
        "filename": "docs/release-notes.rst",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 290
      },
      "writtenOn": "2020-01-23T20:57:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be28c3f5_e2ad98d6",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 1
      },
      "revId": "a9aadd15d1652ae934ec8209478494657789b3a9",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8c3683e_642ae96b",
        "filename": "docs/release-notes.rst",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 290
      },
      "writtenOn": "2020-01-24T16:35:55Z",
      "side": 1,
      "message": "I tried this but ran into build failures...  it looks like adding the date requires some additional configuration change.\n\nChecking dist/acumos_model_runner-0.2.3-py2.py3-none-any.whl: FAILED\n  `long_description` has syntax errors in markup and would not be rendered on PyPI.\n    line 208: Warning: Title underline too short.\n\n    v0.2.3, 23 January 2020\n    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  warning: `long_description_content_type` missing.  defaulting to `text/x-rst`.\nChecking dist/acumos_model_runner-0.2.3.tar.gz: FAILED\n  `long_description` has syntax errors in markup and would not be rendered on PyPI.\n    line 208: Warning: Title underline too short.",
      "parentUuid": "e461ca7e_32ff93ce",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 1
      },
      "revId": "a9aadd15d1652ae934ec8209478494657789b3a9",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": false
    }
  ]
}